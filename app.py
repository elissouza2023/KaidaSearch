# app.py
import streamlit as st
import pandas as pd
import io
from fpdf import FPDF
from PIL import Image
import matplotlib.pyplot as plt
import seaborn as sns

# Configura√ß√µes iniciais da p√°gina
st.set_page_config(page_title="Relat√≥rio ESG - TI", layout="wide")

# Logotipo e cabe√ßalho
logo = Image.open("logopq.png")
st.image(logo, width=200)
st.markdown("## Kaida Search ‚Äî An√°lise de Conhecimento ESG em TI")

# Estilo customizado
st.markdown(
    """
    <style>
    .main {
        background-color: #f9f9f9;
    }
    .reportview-container .markdown-text-container {
        font-family: 'Segoe UI', sans-serif;
        font-size: 16px;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# Introdu√ß√£o executiva
st.markdown("""
### üåü Objetivo da ferramenta
Este relat√≥rio interativo permite avaliar o conhecimento e a aceita√ß√£o das pr√°ticas ESG entre colaboradores de TI da sua empresa. Os dados s√£o obtidos por meio de um formul√°rio padronizado e transformados automaticamente em um relat√≥rio executivo.
""")

st.title("üìä Relat√≥rio Executivo ESG na TI")
st.markdown("Este relat√≥rio resume, de forma estrat√©gica, como o perfil dos colaboradores e o interesse pelo tema ESG se relacionam com o n√≠vel de conhecimento sobre o assunto.")

# Upload do arquivo CSV
uploaded_file = st.file_uploader("üìÖ Envie o arquivo .CSV exportado do Google Forms", type="csv")

if not uploaded_file:
    st.info("Por favor, envie o arquivo CSV da pesquisa para visualizar o relat√≥rio.")

if uploaded_file:
    # Carregamento e pr√©-processamento
    df = pd.read_csv(uploaded_file)
    df.columns = df.columns.str.strip().str.replace('\n', ' ').str.replace('  ', ' ', regex=False)

    # Sele√ß√£o e renomea√ß√£o de colunas
    df_selected = df[[ 
        '1. Qual a sua faixa et√°ria?',
        '2. Qual √© o seu n√≠vel de forma√ß√£o?',
        '5. Voc√™ acha importante que profissionais de TI conhe√ßam e apliquem princ√≠pios ESG no seu trabalho?',
        '7. Na sua opini√£o, qual √°rea da TI pode mais contribuir com as pr√°ticas ESG?',
        '3. Voc√™ j√° ouviu falar sobre pr√°ticas ESG (Ambiental, Social e Governan√ßa)?',
        '4.Voc√™ saberia explicar o que s√£o pr√°ticas ESG?',
        '6. Na empresa onde voc√™ trabalha (ou trabalhou mais recentemente), existe alguma pol√≠tica ou a√ß√£o voltada √†s pr√°ticas ESG?'
    ]].dropna()

    df_selected.columns = [
        'Faixa Et√°ria', 'Forma√ß√£o', 'Import√¢ncia ESG', '√Årea TI Contribui',
        'Conhece ESG', 'Sabe Explicar ESG', 'Conhece Pol√≠tica ESG'
    ]

    # Codifica√ß√£o para correla√ß√£o
    df_encoded = df_selected.apply(lambda col: col.astype('category').cat.codes)
    X_cols = ['Faixa Et√°ria', 'Forma√ß√£o', 'Import√¢ncia ESG', '√Årea TI Contribui']
    Y_cols = ['Conhece ESG', 'Sabe Explicar ESG', 'Conhece Pol√≠tica ESG']
    corr = df_encoded[X_cols + Y_cols].corr()
    corr_xy = corr.loc[X_cols, Y_cols]

    # Tradu√ß√£o para linguagem executiva
    colunas_legendas = {
        'Faixa Et√°ria': 'a faixa et√°ria',
        'Forma√ß√£o': 'a forma√ß√£o educacional',
        'Import√¢ncia ESG': 'a percep√ß√£o de import√¢ncia do ESG',
        '√Årea TI Contribui': 'a √°rea da TI apontada como mais relevante para ESG',
        'Conhece ESG': 'o conhecimento sobre ESG',
        'Sabe Explicar ESG': 'a capacidade de explicar ESG',
        'Conhece Pol√≠tica ESG': 'o conhecimento sobre pol√≠ticas ESG da empresa'
    }

    corr_xy.index = [colunas_legendas[c] for c in corr_xy.index]
    corr_xy.columns = [colunas_legendas[c] for c in corr_xy.columns]

    # Gera√ß√£o dos insights
    def gerar_insights_executivos(corr_df):
        insights = []
        for x_var in corr_df.index:
            for y_var in corr_df.columns:
                valor_corr = corr_df.loc[x_var, y_var]

                if valor_corr >= 0.5:
                    frase = f"Colaboradores para os quais **{x_var}** √© mais evidente tendem a demonstrar maior familiaridade com **{y_var}**."
                elif valor_corr >= 0.3:
                    frase = f"Existe uma tend√™ncia de que **{x_var}** esteja associada a maior familiaridade com **{y_var}**."
                elif valor_corr >= 0.1:
                    frase = f"Foi observada uma leve associa√ß√£o entre **{x_var}** e **{y_var}**, sugerindo uma poss√≠vel influ√™ncia sutil."
                elif valor_corr <= -0.3:
                    frase = f"Pessoas com **{x_var}** tendem a apresentar menor envolvimento com **{y_var}**, o que pode indicar barreiras que merecem aten√ß√£o."
                elif valor_corr <= -0.1:
                    frase = f"Existe uma leve tend√™ncia de que **{x_var}** esteja associada a menor familiaridade com **{y_var}**."
                else:
                    continue

                insights.append("- " + frase)

        return "\n".join(insights)

    relatorio = gerar_insights_executivos(corr_xy)

    # Exibi√ß√£o do relat√≥rio
    st.subheader("üìå Recomenda√ß√µes Estrat√©gicas com base nos dados:")
    st.markdown(relatorio)

    # Fun√ß√£o para gerar o PDF
    def gerar_pdf(texto):
        pdf = FPDF()
        pdf.add_page()
        pdf.set_auto_page_break(auto=True, margin=15)
        pdf.set_font("Arial", size=12)
        pdf.multi_cell(0, 10, "RELAT√ìRIO EXECUTIVO - ESG NA TI\n", align='L')
        for linha in texto.split('\n'):
            pdf.multi_cell(0, 10, linha, align='L')
        return pdf.output(dest='S').encode('latin-1')

    # Gera√ß√£o e bot√£o de download do PDF
    pdf_bytes = gerar_pdf(relatorio)
    st.download_button(
        label="üìÑ Baixar relat√≥rio em PDF",
        data=pdf_bytes,
        file_name="relatorio_esg_ti.pdf",
        mime="application/pdf"
    )

    # Heatmap de correla√ß√£o
    st.subheader("üßΩ Mapa de Correla√ß√£o entre Perfil/Interesse e Conhecimento sobre ESG")
    fig, ax = plt.subplots(figsize=(10, 6))
    sns.heatmap(corr_xy, annot=True, cmap="YlGnBu", fmt=".2f", linewidths=0.5, cbar=True, ax=ax)
    ax.set_title("Correla√ß√£o entre vari√°veis de perfil/interesse e conhecimento/aceita√ß√£o ESG", fontsize=12)
    plt.xticks(rotation=45, ha='right')
    plt.yticks(rotation=0)
    st.pyplot(fig)
